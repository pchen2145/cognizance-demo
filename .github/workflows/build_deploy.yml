name: Build image and deploy

on:
  workflow_dispatch:
  push:
    paths: ["app/**"]

defaults:
  run:
    working-directory: app

permissions:
  checks: write
  contents: read

env:
  ECR_REPOSITORY: python-crypto

jobs:
  run_tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run tests
        run: echo "Running tests... test coverage is 100%!"

  build_and_push_image:
    name: Push docker image to ECR
    needs: run_tests
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: docker build . -t public.ecr.aws/o0s4l1l3/$ECR_REPOSITORY

      - name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_OFFLINE_SCAN: true
        with:
          image-ref: "public.ecr.aws/o0s4l1l3/${{ env.ECR_REPOSITORY }}"
          format: "table"
          exit-code: "0"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL"

      - name: Push image to Amazon ECR
        run: docker push public.ecr.aws/o0s4l1l3/$ECR_REPOSITORY:latest

      - name: Update current deployment image with a rolling restart
        uses: capitaltg/eks-kubectl@docker
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-2
          KUBE_CLUSTER_NAME: mult-tenancy-with-teams
        with:
          args: rollout restart deployment/python-crypto
